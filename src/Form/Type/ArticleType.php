<?php

declare(strict_types=1);

namespace Vex6\OpenArticles\Form\Type;

use PrestaShop\PrestaShop\Core\ConstraintValidator\Constraints\CleanHtml;
use PrestaShopBundle\Form\Admin\Type\FormattedTextareaType;
use PrestaShopBundle\Form\Admin\Type\SwitchType;
use PrestaShopBundle\Form\Admin\Type\TranslatableType;
use PrestaShopBundle\Form\Admin\Type\TranslateType;
use PrestaShopBundle\Form\Admin\Type\TranslatorAwareType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\FormBuilderInterface;

class ArticleType extends TranslatorAwareType
{

    /**
     * @param FormBuilderInterface $builder
     * @param array $options
     * @return void
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        parent::buildForm($builder, $options); // TODO: Change the autogenerated stub
        $builder->add('title', TranslatableType::class, [
            'type' => TextType::class,
            'required' => true,
            'label' => $this->trans('Titre', 'Modules.Openarticles.Admin')
        ])->add('a_select_box', ChoiceType::class, [
            'required' => false,
            'label' => $this->trans('Produit', 'Admin.Catalog.Feature'),
            'choices' => [
                'T-shirt' => 1,
                'Chemise' => 2,
                'Pantalon' => 3,
            ],
            'choice_translation_domain' => 'Admin.Some.Domain',
        ])->add('resume', TranslateType::class, [
            'type' => TextareaType::class,
            'locales' => $this->locales,
            'hideTabs' => false,
            'required' => false,
            'label' => $this->trans('RÃ©sumÃ©', 'Modules.Openarticles.Admin')
        ])->add('description', TranslateType::class, [
            'type' => FormattedTextareaType::class,
            'locales' => $this->locales,
            'hideTabs' => false,
            'required' => false,
            'label' => $this->trans('Description', 'Modules.Openarticles.Admin'),
            'options' => [
                'constraints' => [
                    new CleanHtml([
                        'message' => $this->trans('This field is invalid', 'Admin.Notifications.Error'),
                    ]),
                ],
            ],
        ])->add('active', SwitchType::class, [
            'label'   => $this->trans('Active',  'Modules.Yatpush.Admin'),
            'required' => false,
        ]);
    }
}